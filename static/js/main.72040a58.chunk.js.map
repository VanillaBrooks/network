{"version":3,"sources":["graph.tsx","file_upload.tsx","App.tsx","serviceWorker.js","index.js"],"names":["CustomGraph","props","data","nodesByFileGraph","graph_json","myConfig","make_config","state","config","nodeColor","type","nodeType","nodeSize","key","minimumDegree","_prevZoom","newZoom","console","log","this","dontAllowColorOptions","same","setState","generateSubroutineGraph","undefined","byFile","current","restartSimulation","no_color_graph","nodesByFileAndSubroutineGraph","color_nodes_by_parent_file","window","alert","genericButtonGroupColoring","dontAllowSizeOptions","update","is_active","allowed_active","event","num","Number","currentTarget","value","graph","id","ref","onClickGraph","onClickNode","onDoubleClickNode","onRightClickNode","onClickLink","onRightClickLink","onMouseOverNode","onMouseOutNode","onMouseOverLink","onMouseOutLink","onNodePositionChange","className","colorNodesSameClass","disabled","onClick","colorNodesSame","colorNodesFileClass","colorNodesFile","sizeNodesDefault","setNodeSizeDefault","sizeNodesRuntime","setNodeSizeRuntime","nodesBySubroutineClass","nodesBySubroutine","nodesByFileClass","nodesByFile","nodesByFileAndSubroutineClass","nodesByFileAndSubroutine","React","Component","preventDefault","_nodeId","_source","_target","x","y","json_data","use_default_size","nodes","map","size","cycles","self_subroutine_name","links","generic_edges","edges","source","target","called_subroutine_name","file_to_color","Map","node","color","has","parent_file_name","get","new_color","randomColor","set","caller_callee_map","subroutine_to_file_map","forEach","edge","start_file","end_file","add","Set","entries","source_file","push","use_colors","symbolType","concat","JsonUpload","onDrop","useCallback","acceptedFiles","reader","FileReader","readAsText","onload","result","onUpload","JSON","parse","useDropzone","getRootProps","getInputProps","isDragActive","style","_event","App","uploaded_json","uploadedAndParsedJson","bind","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72040a58.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\nimport { Graph } from 'react-d3-graph';\nimport randomColor from 'randomcolor';\nimport {GraphJson, Node, Edge} from './json';\n\ninterface CustomGraphState {\n\tdata: any,\n\tconfig: any,\n\tnodeColor: NodeColor,\n\tnodeType: NodeType,\n\tnodeSize: NodeSize\n\tminimumDegree: number\n\tkey: number\n}\n\ninterface CustomGraphProps{\n\tgraph_json: GraphJson;\n}\n\ninterface GraphEdge {\n\tsource: string,\n\ttarget: string\n}\n\ntype NodeColor = SameColor | ColorByFile;\n\ninterface SameColor {\n\ttype: \"SameColor\"\n}\n\ninterface ColorByFile {\n\ttype: \"ColorByFile\",\n}\n\ntype NodeSize = SizeRuntime | SizeDefault;\n\ninterface SizeRuntime {\n\ttype: \"SizeRuntime\"\n}\n\ninterface SizeDefault {\n\ttype: \"SizeDefault\"\n}\n\ntype NodeType = NodesBySubroutines | NodesByFile | NodesBySubroutinesAndFile;\n\ninterface NodesBySubroutines{\n\ttype: \"NodesBySubroutines\",\n}\n\ninterface NodesByFile{\n\ttype: \"NodesByFile\",\n}\n\ninterface NodesBySubroutinesAndFile{\n\ttype: \"NodesBySubroutinesAndFile\",\n}\n\nclass CustomGraph extends React.Component<CustomGraphProps, CustomGraphState> {\n\tconstructor(props: CustomGraphProps) {\n\t\tsuper(props)\n\n\t\tconst data = nodesByFileGraph(props.graph_json);\n\n\t\t// the graph configuration, you only need to pass down properties\n\t\t// that you want to override, otherwise default ones will be used\n\t\tconst myConfig = make_config();\n\t\tthis.state = {\n\t\t\tdata: data,\n\t\t\tconfig: myConfig,\n\t\t\tnodeColor: {type: \"SameColor\"},\n\t\t\tnodeType: {type:\"NodesByFile\"},\n\t\t\tnodeSize: {type:\"SizeDefault\"},\n\t\t\tkey: 1,\n\t\t\tminimumDegree: 1\n\t\t};\n\t}\n\n\tonZoomChange(_prevZoom: number, newZoom: number) {\n\t\tconsole.log(newZoom)\n\t\t//this.setState({currentZoom: newZoom});\n\t}\n\n\tdontAllowColorOptions() {\n\t\tif (this.state.nodeType.type === \"NodesByFile\") {\n\t\t\tconsole.log(\"preventing options\")\n\t\t\treturn true\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tdontAllowSizeOptions() {\n\t\tif (this.state.nodeType.type === \"NodesBySubroutines\") {\n\t\t\treturn false\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// redraw all the nodes with the same colors\n\tcolorNodesSame() {\n\t\tconsole.log(\"nodes same\")\n\t\tif (this.dontAllowColorOptions()) {\n\t\t\treturn\n\t\t}\n\n\t\tlet same : NodeColor= {type: \"SameColor\"};\n\t\tthis.setState({\n\t\t\tnodeColor: same,\n\t\t\tdata:this.generateSubroutineGraph(same, undefined, this.state.nodeSize)\n\t\t})\n\t}\n\n\t// redraw all the nodes with their colors corresponding to the colors of the parent file\n\tcolorNodesFile() {\n\t\tconsole.log(\"nodes file\")\n\t\tif (this.dontAllowColorOptions()) {\n\t\t\treturn\n\t\t}\n\t\tlet byFile : NodeColor= {type: \"ColorByFile\"};\n\n\t\tthis.setState({\n\t\t\tnodeColor: byFile,\n\t\t\tdata:this.generateSubroutineGraph(byFile, undefined, this.state.nodeSize)\n\t\t});\n\t}\n\n\t// Nodes Setters\n\tnodesBySubroutine() {\n\t\tconsole.log(\"nodes by subroutine\")\n\t\tlet current : NodeType = {type:\"NodesBySubroutines\"};\n\t\tthis.setState({\n\t\t\tnodeType: current,\n\t\t\tdata: this.generateSubroutineGraph(this.state.nodeColor, current, this.state.nodeSize)\n\t\t});\n\n\t\tthis.restartSimulation()\n\t}\n\n\tnodesByFile() {\n\t\tconsole.log(\"nodes by file\")\n\t\tlet current : NodeType = {type:\"NodesByFile\"};\n\t\tthis.setState({\n\t\t\tnodeType: current,\n\t\t\tdata: this.generateSubroutineGraph(this.state.nodeColor, current, undefined)\n\t\t})\n\t\tthis.restartSimulation()\n\t}\n\n\tnodesByFileAndSubroutine() {\n\t\tconsole.log(\"nodes by subroutine and file\")\n\t\tlet current : NodeType = {type:\"NodesBySubroutinesAndFile\"};\n\t\tthis.setState({\n\t\t\tnodeType: current,\n\t\t\tdata: this.generateSubroutineGraph(this.state.nodeColor, current, undefined)\n\t\t})\n\n\t\tthis.restartSimulation()\n\t}\n\n\tgenerateSubroutineGraph(nodeColor: NodeColor, nodeType: NodeType | undefined, nodeSize: NodeSize | undefined) {\n\t\tif (nodeType === undefined) {\n\t\t\tnodeType = this.state.nodeType\n\t\t}\n\t\tif (nodeSize === undefined) {\n\t\t\tnodeSize = this.state.nodeSize\n\t\t}\n\n\t\tconsole.log(\"nodeColor\");\n\t\tconsole.log(nodeColor.type);\n\t\tconsole.log(\"render_option:\")\n\t\tconsole.log(nodeType.type);\n\t\tif (nodeColor.type === \"SameColor\") {\n\t\t\tif (nodeType.type === \"NodesBySubroutines\") {\n\t\t\t\t// since we are rendering subroutines we also have to check if\n\t\t\t\t// we should render performance information\n\t\t\t\tif (nodeSize.type === \"SizeRuntime\") {\n\t\t\t\t\treturn no_color_graph(this.props.graph_json, false)\n\t\t\t\t} else if (nodeSize.type === \"SizeDefault\") {\n\t\t\t\t\treturn no_color_graph(this.props.graph_json, true)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (nodeType.type=== \"NodesByFile\") {\n\t\t\t\tconsole.log(\"same color file only\")\n\t\t\t\treturn nodesByFileGraph(this.props.graph_json);\n\t\t\t}\n\t\t\telse if (nodeType.type === \"NodesBySubroutinesAndFile\") {\n\t\t\t\tconsole.log(\"same color file and subroutine\")\n\t\t\t\treturn nodesByFileAndSubroutineGraph(this.props.graph_json, false);\n\t\t\t}\n\t\t} else if (nodeColor.type === \"ColorByFile\") {\n\t\t\tif (nodeType.type === \"NodesBySubroutines\"){\n\t\t\t\t// since we are rendering subroutines we also have to check if\n\t\t\t\t// we should render performance information\n\t\t\t\tif (nodeSize.type === \"SizeRuntime\") {\n\t\t\t\t\treturn color_nodes_by_parent_file(this.props.graph_json,false)\n\t\t\t\t} else if (nodeSize.type === \"SizeDefault\") {\n\t\t\t\t\treturn color_nodes_by_parent_file(this.props.graph_json,true)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (nodeType.type === \"NodesByFile\") {\n\t\t\t\tconsole.log(\"color files | file only\")\n\t\t\t\treturn nodesByFileGraph(this.props.graph_json);\n\t\t\t}\n\t\t\telse if (nodeType.type === \"NodesBySubroutinesAndFile\") {\n\t\t\t\tconsole.log(\"color files | file and subroutine\")\n\t\t\t\treturn nodesByFileAndSubroutineGraph(this.props.graph_json, true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\twindow.alert(\"generateSubroutineGraph: Neither value true\")\n\t\t}\n\t}\n\n\t// colors stuff\n\tcolorNodesSameClass() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeColor.type === \"SameColor\", this.state.nodeType.type !== \"NodesByFile\");\n\t}\n\tcolorNodesFileClass() {\n\t\tlet result = this.genericButtonGroupColoring(this.state.nodeColor.type ===  \"ColorByFile\", this.state.nodeType.type !== \"NodesByFile\") ;\n\t\treturn result\n\t}\n\n\t// sizing of nodes stuff\n\tsizeNodesRuntime() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeSize.type === \"SizeRuntime\", this.state.nodeType.type === \"NodesBySubroutines\");\n\t}\n\n\tsizeNodesDefault() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeSize.type === \"SizeDefault\", this.state.nodeType.type === \"NodesBySubroutines\" );\n\t}\n\n\tsetNodeSizeRuntime() {\n\t\tif (this.dontAllowSizeOptions()) {\n\t\t\treturn\n\t\t}\n\n\t\tlet update : NodeSize = {type: \"SizeRuntime\"};\n\t\tthis.setState ({\n\t\t\tnodeSize: update,\n\t\t\tdata: this.generateSubroutineGraph(this.state.nodeColor, undefined, update)\n\t\t})\n\t}\n\n\tsetNodeSizeDefault() {\n\t\tif (this.dontAllowSizeOptions()) {\n\t\t\treturn\n\t\t}\n\n\t\tlet update : NodeSize = {type: \"SizeDefault\"};\n\t\tthis.setState ({\n\t\t\tnodeSize: update,\n\t\t\tdata: this.generateSubroutineGraph(this.state.nodeColor, undefined, update)\n\t\t})\n\t}\n\n\t// nodes stuff\n\tnodesBySubroutineClass() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeType.type === \"NodesBySubroutines\" , true);\n\t}\n\tnodesByFileClass() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeType.type === \"NodesByFile\", true);\n\t}\n\tnodesByFileAndSubroutineClass() {\n\t\treturn this.genericButtonGroupColoring(this.state.nodeType.type === \"NodesBySubroutinesAndFile\", true);\n\t}\n\n\t// is active determines if this button should be active (its clicked)\n\t// allowed_active determines if these buttons are even allowed to be active (for example,\n\t// this node coloring options are not enabled if the nodes are files)\n\tgenericButtonGroupColoring(is_active: boolean, allowed_active: boolean) {\n\t\tif (is_active === true) {\n\t\t\tif (allowed_active === true) {\n\t\t\t\treturn \"list-group-item list-group-item-action active\"\n\t\t\t} else {\n\t\t\t\treturn \"list-group-item list-group-item-action\"\n\t\t\t}\n\t\t} else if (is_active === false) {\n\t\t\treturn \"list-group-item list-group-item-action\"\n\t\t}\n\t\tconsole.log(\"WARNING: genericButtonGroupColoring did not return a class\")\n\t}\n\n\trestartSimulation() {\n\t\tthis.setState({key: this.state.key + 1})\n\t}\n\n\tminDegreeUpdate(event: React.FormEvent<HTMLInputElement>) {\n\t\tlet num = Number(event.currentTarget.value)\n\n\t\tthis.setState({minimumDegree: num})\n\t\tthis.restartSimulation()\n\t}\n\n\trender() {\n\t\tlet graph = <Graph\n\t\t\tkey={this.state.key}\n\t\t    id='graph-id' // id is mandatory, if no id is defined rd3g will throw an error\n\t\t\tref=\"graph\"\n\t\t    data={this.state.data}\n\t\t    config={this.state.config}\n\t\t\t//onZoomChange={this.onZoomChange}\n\t\t    onClickGraph={onClickGraph}\n\t\t    onClickNode={onClickNode}\n\t\t    onDoubleClickNode={onDoubleClickNode}\n\t\t    onRightClickNode={onRightClickNode}\n\t\t    onClickLink={onClickLink}\n\t\t    onRightClickLink={onRightClickLink}\n\t\t    onMouseOverNode={onMouseOverNode}\n\t\t    onMouseOutNode={onMouseOutNode}\n\t\t    onMouseOverLink={onMouseOverLink}\n\t\t    onMouseOutLink={onMouseOutLink}\n\t\t\tonNodePositionChange={onNodePositionChange}\n\t\t\t/>\n\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t{graph}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-3 graph-settings shadow\">\n\t\t\t\t\t\t<h3 className=\"mt-2\">Settings</h3>\n\n\t\t\t\t\t\t<hr/>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<h5 className=\"pl-3 mt-1\">Node Colors</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.dontAllowColorOptions() ?\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.colorNodesSameClass()} disabled onClick={()=> this.colorNodesSame()}>Same Color</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.colorNodesFileClass()} disabled onClick={() => this.colorNodesFile()} >Color By File</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.colorNodesSameClass()} onClick={()=> this.colorNodesSame()}>Same Color</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.colorNodesFileClass()} onClick={() => this.colorNodesFile()} >Color By File</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<h5 className=\"pl-3 mt-3\">Node Size</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.dontAllowColorOptions() ?\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.sizeNodesDefault()} disabled onClick={() => this.setNodeSizeDefault()} >Default Size</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.sizeNodesRuntime()} disabled onClick={()=> this.setNodeSizeRuntime()}>Size by Runtime</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.sizeNodesDefault()} onClick={() => this.setNodeSizeDefault()} >Default Size</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className={this.sizeNodesRuntime()} onClick={()=> this.setNodeSizeRuntime()}>Size by Runtime</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<h5 className=\"pl-3 mt-3\">Node Options</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t\t<button type=\"button\" className={this.nodesBySubroutineClass()} onClick={()=> this.nodesBySubroutine()}>Nodes by Subroutines</button>\n\t\t\t\t\t\t\t<button type=\"button\" className={this.nodesByFileClass()} onClick={() => this.nodesByFile()} >Nodes by File</button>\n\t\t\t\t\t\t\t<button type=\"button\" className={this.nodesByFileAndSubroutineClass()} onClick={() => this.nodesByFileAndSubroutine()} >Include both subroutines and files</button>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary mt-3\" onClick={() => this.restartSimulation()}>Restart Simulation</button>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Callback to handle click on the graph.\n// @param {Object} event click dom event\nconst onClickGraph = function(event: any) {\n\tevent.preventDefault();\n     //window.alert('Clicked the graph background');\n};\n\nconst onClickNode = function(_nodeId: any) {\n     //window.alert('Clicked node ${nodeId}');\n};\n\nconst onDoubleClickNode = function(_nodeId: any) {\n     //window.alert('Double clicked node ${nodeId}');\n};\n\nconst onRightClickNode = function(event: React.MouseEvent<Element, MouseEvent>, _nodeId: string) {\n\tevent.preventDefault();\n     //window.alert('Right clicked node ${nodeId}');\n};\n\nconst onMouseOverNode = function(_nodeId: string) {\n     //window.alert(`Mouse over node ${nodeId}`);\n};\n\nconst onMouseOutNode = function(_nodeId: string) {\n     //window.alert(`Mouse out node ${nodeId}`);\n};\n\nconst onClickLink = function(_source: any, _target: any) {\n     //window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst onRightClickLink = function(event: any, _source: any, _target: any) {\n\tevent.preventDefault();\n     //window.alert('Right clicked link between ${source} and ${target}');\n};\n\nconst onMouseOverLink = function(_source: any, _target: any) {\n     //window.alert(`Mouse over in link between ${source} and ${target}`);\n};\n\nconst onMouseOutLink = function(_source: any, _target: any) {\n     //window.alert(`Mouse out link between ${source} and ${target}`);\n};\n\nconst onNodePositionChange = function(_nodeId: string, x: number, y:number) {\n     //window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n};\n\nconst make_config = function() {\n\treturn {\n\t  \"automaticRearrangeAfterDropNode\": false,\n\t  \"initialZoom\": .3,\n\t  \"collapsible\": false,\n\t  \"directed\": true,\n\t  \"focusAnimationDuration\": 0.75,\n\t  \"focusZoom\": 1,\n\t  \"height\": 1000,\n\t  \"highlightDegree\": 1,\n\t  \"highlightOpacity\": 0.2,\n\t  \"linkHighlightBehavior\": false,\n\t  \"maxZoom\": 8,\n\t  \"minZoom\": 0.1,\n\t  \"nodeHighlightBehavior\": true,\n\t  \"panAndZoom\": false,\n\t  //\"staticGraph\": false,\n\t  //\"staticGraphWithDragAndDrop\": false,\n\t  \"width\": 1500,\n\t  \"d3\": {\n\t    \"alphaTarget\": 0.01,\n\t    \"gravity\": -2000,\n\t    \"linkLength\": 200,\n\t    \"linkStrength\": .1,\n\t    \"disableLinkForce\": false\n\t  },\n\t  \"node\": {\n\t    \"color\": \"#d3d3d3\",\n\t    \"fontColor\": \"black\",\n\t    \"fontSize\": 30,\n\t    \"fontWeight\": \"normal\",\n\t    \"highlightColor\": \"red\",\n\t    \"highlightFontSize\": 30,\n\t    \"highlightFontWeight\": \"bold\",\n\t    \"highlightStrokeColor\": \"SAME\",\n\t    \"highlightStrokeWidth\": 1.5,\n\t    \"labelProperty\": \"name\",\n\t    \"mouseCursor\": \"pointer\",\n\t    \"opacity\": 1,\n\t    \"renderLabel\": true,\n\t    \"size\": 450,\n\t    \"strokeColor\": \"none\",\n\t    \"strokeWidth\": 1.5,\n\t    \"svg\": \"\",\n\t    \"symbolType\": \"circle\"\n\t  },\n\t  \"link\": {\n\t    \"color\": \"#d3d3d3\",\n\t    \"fontColor\": \"red\",\n\t    \"fontSize\": 10,\n\t    \"fontWeight\": \"normal\",\n\t    \"highlightColor\": \"blue\",\n\t    \"highlightFontSize\": 8,\n\t    \"highlightFontWeight\": \"bold\",\n\t    \"mouseCursor\": \"pointer\",\n\t    \"opacity\": 1,\n\t    \"renderLabel\": false,\n\t    \"semanticStrokeWidth\": false,\n\t    \"strokeWidth\": 2,\n\t    \"markerHeight\": 6,\n\t    \"markerWidth\": 6,\n\t\t//\"type\": \"CURVE_SMOOTH\"\n\t  }\n\t}\n}\n\n// given some json generate a blank graph with each node using the default colors of the config\nfunction no_color_graph(json_data: GraphJson, use_default_size: boolean) {\n\t// graph payload (with minimalist structure)\n\tconst nodes = json_data.nodes.map(x => {\n\t\tlet size;\n\n\t\t// either use a default size or use the number of cycles\n\t\tif (use_default_size===true) {\n\t\t\tsize = 450;\n\t\t} else {\n\t\t\tconsole.log(\"writing size by cycles\")\n\t\t\tsize = x.cycles;\n\t\t}\n\n\t\treturn {id: x.self_subroutine_name, size: size}\n\t})\n\tconst data = {\n\t\tnodes: nodes,\n\t\tlinks: generic_edges(json_data)\n\t};\n\treturn data\n}\n\n// common function to generate the links between nodes\nfunction generic_edges(json_data: GraphJson) {\n\tconst edges = json_data.edges.map(x => {\n\t\tlet map = {\n\t\t\tsource: x.self_subroutine_name,\n\t\t\ttarget: x.called_subroutine_name\n\t\t};\n\t\treturn map\n\t})\n\treturn edges\n}\n\n\n// make the color of each node dependent on the file that it came from\nfunction color_nodes_by_parent_file(json_data: GraphJson, use_default_size: boolean) {\n\tlet file_to_color = new Map();\n\n\tconsole.log(\"nodes\")\n\tconsole.log(json_data.nodes)\n\tconst nodes = json_data.nodes.map(node => {\n\t\tlet color;\n\t\tif (file_to_color.has(node.parent_file_name)) {\n\t\t\tcolor = file_to_color.get(node.parent_file_name);\n\t\t}\n\t\telse {\n\t\t\tlet new_color = randomColor();\n\t\t\tfile_to_color.set(node.parent_file_name, new_color)\n\t\t\tcolor = new_color\n\t\t}\n\n\t\tlet size;\n\t\t// either use a default size or use the number of cycles\n\t\tif (use_default_size===true) {\n\t\t\tsize = 450;\n\t\t} else {\n\t\t\tconsole.log(\"writing size by cycles\")\n\t\t\tsize = node.cycles;\n\t\t}\n\n\t\treturn {\n\t\t\tid: node.self_subroutine_name,\n\t\t\tcolor: color,\n\t\t\tsize: size\n\t\t}\n\t})\n\n\tconst edges = generic_edges(json_data);\n\n\treturn {\n\t\tnodes: nodes,\n\t\tlinks: edges\n\t}\n}\n\nfunction nodesByFileGraph(json_data: GraphJson ) {\n\tlet caller_callee_map: Map<string, Set<string>>= new Map();\n\tlet subroutine_to_file_map = new Map();\n\n\tlet nodes = json_data.nodes.map(node => {\n\t\tsubroutine_to_file_map.set(node.self_subroutine_name, node.parent_file_name);\n\n\t\treturn {\n\t\t\tid: node.parent_file_name,\n\t\t}\n\t});\n\n\t// first we make a pass through all the edges and tally up all the occurances\n\t// of the files calling each other\n\tjson_data.edges.forEach(edge => {\n\t\tlet start_file = subroutine_to_file_map.get(edge.self_subroutine_name);\n\t\tlet end_file = subroutine_to_file_map.get(edge.called_subroutine_name);\n\n\t\tif (caller_callee_map.has(start_file)) {\n\t\t\tlet current = caller_callee_map.get(start_file);\n\t\t\tif (current !== undefined) {\n\t\t\t\tcurrent.add(end_file);\n\t\t\t\tcaller_callee_map.set(start_file, current)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet set : Set<string>= new Set();\n\t\t\tset.add(end_file);\n\t\t\tcaller_callee_map.set(start_file, set);\n\t\t}\n\t})\n\n\tconsole.log(\"caller map\");\n\tconsole.log(caller_callee_map);\n\n\tconsole.log(\"edges\")\n\n\tlet edges : Array<GraphEdge> = [];\n\n\tfor (const [source_file, target_list] of caller_callee_map.entries()) {\n\t\t// map over the list of files each file calls\n\t\ttarget_list.forEach((target: string) => {\n\t\t\tedges.push( {\n\t\t\t\tsource: source_file,\n\t\t\t\ttarget: target,\n\t\t\t})\n\t\t})\n\t}\n\n\tconsole.log(edges)\n\n\treturn {\n\t\tnodes: nodes,\n\t\tlinks: edges\n\t}\n}\n\n// use_colors determines if we should use the default node color from the config (false) or\n// make all subroutines from the same file the same color (true)\nfunction nodesByFileAndSubroutineGraph(json_data: GraphJson, use_colors: boolean) {\n\t// optionally stores colors that each file is associated with\n\tlet file_to_color = new Map();\n\n\tlet edges : Array<GraphEdge>= []\n\n\t// generate nodes for the files\n\tlet nodes_to_concat= json_data.nodes.map(node => {\n\t\t// first we make sure that every file has a color associated wtih it\n\t\tlet color;\n\t\tif (file_to_color.has(node.parent_file_name)) {\n\t\t\tcolor = file_to_color.get(node.parent_file_name);\n\t\t}\n\t\telse {\n\t\t\tlet new_color = randomColor();\n\t\t\tfile_to_color.set(node.parent_file_name, new_color)\n\t\t\tcolor = new_color\n\t\t}\n\n\t\tif (use_colors) {\n\t\t\treturn {\n\t\t\t\tid: node.parent_file_name,\n\t\t\t\tsymbolType: \"triangle\",\n\t\t\t\tcolor: color\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn {\n\t\t\t\tid: node.parent_file_name,\n\t\t\t\tsymbolType: \"triangle\",\n\t\t\t}\n\t\t}\n\t});\n\n\t// also generate nodes for the subroutines\n\tlet nodes = nodes_to_concat.concat(json_data.nodes.map(node => {\n\t\t// make sure there is an edge between the file and and its subroutine\n\t\tedges.push( {\n\t\t\tsource: node.parent_file_name,\n\t\t\ttarget: node.self_subroutine_name,\n\t\t})\n\n\t\tif (use_colors) {\n\t\t\treturn {\n\t\t\t\tid: node.self_subroutine_name,\n\t\t\t\tsymbolType: \"circle\",\n\t\t\t\tcolor: file_to_color.get(node.parent_file_name)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn {\n\t\t\t\tid: node.self_subroutine_name,\n\t\t\t\tsymbolType: \"circle\"\n\t\t\t}\n\t\t}\n\t}))\n\n\n\t// first we make a pass through all the edges and tally up all the occurances\n\t// of the files calling each other\n\tjson_data.edges.forEach(edge => {\n\t\t// also add connections between subroutines\n\t\tedges.push( {\n\t\t\tsource: edge.self_subroutine_name,\n\t\t\ttarget: edge.called_subroutine_name,\n\t\t})\n\t})\n\n\treturn {\n\t\tnodes: nodes,\n\t\tlinks: edges\n\t}\n}\n\nexport default CustomGraph;\n","import {useDropzone} from 'react-dropzone'\nimport json_data from './streams.json';\nimport React, {useCallback} from 'react';\n\n\nfunction JsonUpload(props: any) {\n\tconst onDrop = useCallback(acceptedFiles => {\n\t\tlet reader = new FileReader();\n\t\treader.readAsText(acceptedFiles[0])\n\n\n\t\treader.onload = function() {\n\t\t\tlet result: string = reader.result as string;\n\t\t\tprops.onUpload(JSON.parse(result));\n  \t\t};\n  \t}, [props])\n\n  \tconst {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n\tconst onClick = function(_event: any) {\n\t\tprops.onUpload(json_data)\n\t}\n \n\t// TODO: the padding in here is bad but ive spent like an hour trying to vertically\n\t// center in bootstrap so it is what it is\n  \treturn (\n\t\t<div className=\"container\">\n\t\t\t<div style={{\"padding\":\"18% 0\"}}/>\n\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t<div className=\"col-5 align-self-center shadow shadow-lg rounded\">\n\t\t\t\t\t<div {...getRootProps(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\"minHeight\":\"100px\",\n\t\t\t\t\t\t\t\t\"borderStyle\":\"dashed\",\n\t\t\t\t\t\t\t\t\"borderRadius\":\"3px\",\n\t\t\t\t\t\t\t\t\"borderWidth\":\"1px\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tclassName: \"p-2 mt-3\"\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t}>\n\t\t\t\t\t\t{/* This is the drag-to-upload a file*/}\n\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t{\n  \t  \t\t\t\t  \t  isDragActive ?\n  \t  \t\t\t\t  \t    <p className=\"text-center\">Drop Here</p> :\n  \t  \t\t\t\t  \t    <p className=\"text-center\">Drag A Parsing Result to View</p>\n\t\t\t\t\t\t}\n\n  \t  \t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"row p-2\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<p className=\"text-center\">or:</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* OTHERWISE: we can load a default file graph*/}\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-md offset-md-3 pl-4\">\n\t\t\t\t\t\t\t<button className=\"btn btn-primary mb-2\" onClick={onClick}>Load Example Graph</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  \t)\n}\n\nexport default JsonUpload;\n","import React from 'react';\n//import ReactDOM from \"react-dom\";\nimport CustomGraph from \"./graph\";\nimport JsonUpload from \"./file_upload\";\nimport {GraphJson} from './json';\n\nclass App extends React.Component<{}, AppState> {\n\tconstructor(props: AppProps) {\n\t\tsuper(props)\n\t\tthis.state = {uploaded_json: undefined};\n\t}\n\n\t// When the user chooses json data this callback fires and we set the json that we\n\t// will pass to the graph\n\tonUpload(uploadedAndParsedJson: GraphJson) {\n\t\tconsole.log(\"json data has been uploaded\");\n\t\tthis.setState({uploaded_json: uploadedAndParsedJson})\n\t}\n\n\trender() {\n\t\t\tif (this.state.uploaded_json === undefined) {\n\n\t\t\t\treturn <JsonUpload onUpload={this.onUpload.bind(this)}/>\n\t\t\t} else {\n\t\t\t\treturn <CustomGraph graph_json={this.state.uploaded_json}/>\n\n\t\t\t}\n\t}\n}\n\ninterface AppState {\n\tuploaded_json: GraphJson | undefined,\n}\n\ninterface AppProps {\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}